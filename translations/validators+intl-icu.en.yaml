### User
user.password.mismatch: Passwords do not match.
user.email.unique: This email is already taken.
user.email.not_blank: Please enter an email.
user.email.invalid: Please enter a valid email.
user.password.min_length: The password must be at least 8 characters.
user.password.max_length: The password cannot be longer than 4096 characters.
user.password.invalid: The password must contain at least one uppercase letter, one lowercase letter and one number.
user.password.compromised: This password has been compromised. Please choose a different one.
user.password.not_blank: Enter a password.
user.current_password.not_blank: Enter your current password.
user.current_password.invalid: The current password is invalid.
user.first_name.not_blank: Please enter a first name.
user.last_name.not_blank: Please enter a last name.
user.agree_terms_error: You must agree to the terms of use.

### Team
team.name.not_blank: The team name cannot be blank.
team.responsible.not_blank: The team responsible cannot be blank.
team.responsible.not_in_members: The team's responsible must be a member of the team.
team.parent_team.not_self: The parent team cannot be the same as the current team.

### Status
status.slug.unique: This slug is already taken.
status.name.not_blank: The status name cannot be blank.
status.position.type: The status position must be an integer.
status.position.positive_or_zero: The status position must be greater than or equal to 0.
status.color.not_blank: The status color cannot be blank.
status.color.css_color: The status color must be a valid CSS color.

### Risk
risk.name.not_blank: The risk name cannot be blank.
risk.identified_at.not_blank: The risk identified at date cannot be blank.
risk.identified_at.type: The risk identified at date must be a valid date.
risk.identified_at.greater_than_or_equal: The risk identified at date must be greater than or equal to the project start date ({compared_value}).
risk.resolved_at.not_blank: The risk resolved at date cannot be blank.
risk.resolved_at.type: The risk resolved at date must be a valid date.
risk.resolved_at.greater_than_or_equal: The risk resolved at date must be greater than or equal to the risk identified at date ({compared_value}).
risk.severity.not_blank: The severity of the risk cannot be blank.
risk.severity.type: The severity of the risk must be a valid severity.
risk.probability.not_blank: The probability of the risk cannot be blank.
risk.probability.type: The probability of the risk must be a valid probability.
status.project.not_blank: The risk must be associated to a project.

### Project
project.code.unique: This code is already taken.
project.name.not_blank: The project name cannot be blank.
project.start_at.not_blank: The project start date cannot be blank.
project.start_at.type: The project start date must be a valid date.
project.end_at.not_blank: The project end date cannot be blank.
project.end_at.type: The project end date must be a valid date.
project.end_at.greater_than_or_equal_start_at: The project end date must be greater than or equal to the project start date ({compared_value}).
project.team.not_blank: The project must be associated to a team.
project.client_team.not_blank: The project must be associated to a client team.
project.budget.not_blank: The project budget cannot be blank.
project.archived.type: The project archived status must be a boolean.
project.private.type: The project private status must be a boolean.

### Portfolio
portfolio.name.not_blank: The portfolio name cannot be blank.
portfolio.responsible.not_blank: The portfolio responsible cannot be blank.

### Milestone
milestone.title.not_blank: The milestone title cannot be blank.
milestone.required.type: The milestone required status must be a boolean.
milestone.position.type: The milestone position must be an integer.
milestone.position.positive_or_zero: The milestone position must be greater than or equal to 0.
milestone.start_at.not_blank: The milestone start date cannot be blank.
milestone.deadline.datetime: The milestone deadline must be a valid date.
milestone.end_at.not_blank: The milestone end date cannot be blank.
milestone.end_at.datetime: The milestone end date must be a valid date.
milestone.start_at.greater_than_or_equal: The milestone start date must be greater than or equal to the project start date ({compared_value}).
milestone.end_at.greater_than_start_at: The milestone end date must be greater than or equal to the milestone start date ({compared_value}).

### Event
event.date.not_blank: The event date cannot be blank.
event.date.type: The event date must be a valid date.
event.date.greater_than_or_equal: The event date must be greater than or equal to the project start date ({compared_value}).
event.name.not_blank: The event name cannot be blank.
event.milestone.not_blank: The event must be associated to a milestone.
event.project.not_blank: The event must be associated to a project.

### Budget
budget.amount.not_blank: The budget amount cannot be blank.
budget.amount.type: The budget amount must be a number.
budget.spent_amount.not_blank: The budget spent amount cannot be blank.
budget.spentAmount.type: The budget spent amount must be a number.
budget.spent_amount.positive_or_zero: The budget spent amount must be greater than or equal to 0.
